name: Telegram Bot with File Server and Playit Tunnel

on:
  workflow_dispatch:

jobs:
  run-bot-server-playit:
    runs-on: windows-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyrogram TgCrypto aiofiles aiohttp requests cryptg

    - name: Create Directories
      run: |
        New-Item -ItemType Directory -Force -Path "$env:GITHUB_WORKSPACE\downloads"
        New-Item -ItemType Directory -Force -Path "$env:GITHUB_WORKSPACE\temp"

    - name: Download and Install Playit
      run: |
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Start-Sleep -Seconds 5

    - name: Run Bot, Server and Playit Together
      env:
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        PLAYIT_AUTH_KEY: ${{ secrets.DEAR_FIN }}
      run: |
        # Start Telegram Bot in background, redirect output
        Start-Process -FilePath "python" -ArgumentList "bot.py" -WorkingDirectory "$env:GITHUB_WORKSPACE" -RedirectStandardOutput "$env:GITHUB_WORKSPACE\bot.log" -RedirectStandardError "$env:GITHUB_WORKSPACE\bot-error.log" -NoNewWindow
        
        # Start Playit in background, redirect output
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret", "$env:PLAYIT_AUTH_KEY" -RedirectStandardOutput "$env:GITHUB_WORKSPACE\playit.log" -RedirectStandardError "$env:GITHUB_WORKSPACE\playit-error.log" -NoNewWindow

        # Wait for services to initialize
        Start-Sleep -Seconds 15

        Write-Host "üöÄ Bot, Server and Playit started successfully!"
        Write-Host "üì± Telegram Bot: Running with file server integration"
        Write-Host "üåê File Server: http://localhost:8080"
        Write-Host "üîó Public URL: http://islands-km.gl.at.ply.gg:46886"
        Write-Host "üîÑ Playit Tunnel: Active"

        # Monitor logs and keep services running
        while ($true) {
          Write-Host ""
          Write-Host "===== TELEGRAM BOT LOGS ====="
          if (Test-Path "$env:GITHUB_WORKSPACE\bot.log") {
            Get-Content -Path "$env:GITHUB_WORKSPACE\bot.log" -Tail 20
          } else {
            Write-Host "Bot log file not found"
          }
          
          if (Test-Path "$env:GITHUB_WORKSPACE\bot-error.log") {
            $errorContent = Get-Content -Path "$env:GITHUB_WORKSPACE\bot-error.log" -Tail 10
            if ($errorContent) {
              Write-Host "‚ö†Ô∏è BOT ERRORS:"
              $errorContent | ForEach-Object { Write-Host $_ }
            }
          }

          Write-Host ""
          Write-Host "===== PLAYIT AGENT LOGS ====="
          if (Test-Path "$env:GITHUB_WORKSPACE\playit.log") {
            Get-Content -Path "$env:GITHUB_WORKSPACE\playit.log" -Tail 20
          } else {
            Write-Host "Playit log file not found"
          }
          
          if (Test-Path "$env:GITHUB_WORKSPACE\playit-error.log") {
            $playitErrors = Get-Content -Path "$env:GITHUB_WORKSPACE\playit-error.log" -Tail 10
            if ($playitErrors) {
              Write-Host "‚ö†Ô∏è PLAYIT ERRORS:"
              $playitErrors | ForEach-Object { Write-Host $_ }
            }
          }

          Write-Host ""
          Write-Host "===== SERVICE STATUS ====="
          Write-Host "ü§ñ Bot Process: $(if (Get-Process python -ErrorAction SilentlyContinue) {'Running ‚úÖ'} else {'Stopped ‚ùå'})"
          Write-Host "üîó Playit Process: $(if (Get-Process playit -ErrorAction SilentlyContinue) {'Running ‚úÖ'} else {'Stopped ‚ùå'})"
          Write-Host "üìä Downloaded Files: $(if (Test-Path '$env:GITHUB_WORKSPACE\downloads') {(Get-ChildItem '$env:GITHUB_WORKSPACE\downloads' -File).Count} else {0})"
          
          Start-Sleep -Seconds 30
        }
      shell: pwsh
      
    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: service-logs
        path: |
          bot.log
          bot-error.log
          playit.log
          playit-error.log
