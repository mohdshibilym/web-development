name: Server with Cloudflare Tunnel

on:
  workflow_dispatch:

jobs:
  b:
    runs-on: windows-latest

    steps:
      - name: Clone repo and install dependencies
        env:
          k: ${{ secrets.PAT }}
        run: |
          git clone https://$env:k@github.com/mohdshibili/AccaMate.git z
          cd z\server
          npm i

      - name: Download and install cloudflared
        run: |
          iwr -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "$env:USERPROFILE\cloudflared.exe"
          
      - name: Start Node.js server and Cloudflare Tunnel
        env:
          CLOUDFLARE_TUNNEL_TOKEN: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}
        run: |
          # Start Node.js in background
          Start-Process -FilePath "npm" -ArgumentList "run", "start" -WorkingDirectory "$env:GITHUB_WORKSPACE\z\server" -RedirectStandardOutput "$env:GITHUB_WORKSPACE\node.log" -RedirectStandardError "$env:GITHUB_WORKSPACE\node-error.log" -NoNewWindow
          
          # Give Node.js a moment to start
          Start-Sleep -Seconds 5
          
          # Start Cloudflare Tunnel
          Start-Process -FilePath "$env:USERPROFILE\cloudflared.exe" -ArgumentList "tunnel", "run", "--protocol", "http2", "--token", "$env:CLOUDFLARE_TUNNEL_TOKEN" -RedirectStandardOutput "$env:GITHUB_WORKSPACE\cloudflared.log" -RedirectStandardError "$env:GITHUB_WORKSPACE\cloudflared-error.log" -NoNewWindow
          
          # Display logs
          while ($true) {
            Write-Host "===== NODE.JS SERVER LOGS ====="
            if (Test-Path "$env:GITHUB_WORKSPACE\node.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\node.log" -Tail 20
            }
            
            Write-Host "===== CLOUDFLARE TUNNEL LOGS ====="
            if (Test-Path "$env:GITHUB_WORKSPACE\cloudflared.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\cloudflared.log" -Tail 20
            }
            
            # Sleep for 30 seconds before refreshing logs
            Start-Sleep -Seconds 30
          }
        shell: pwsh
