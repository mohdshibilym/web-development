name: Node Server with Playit.gg

on: [workflow_dispatch]

jobs:
  start-node-server:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    # - name: Set up Node.js
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '16'

    - name: Install dependencies
      run: |
        npm install express
        # Add any other dependencies your Node.js application needs

    - name: Create simple Express server
      run: |
        cat > server.js << 'EOL'
        const express = require('express');
        const app = express();
        const port = 3000;

        app.get('/', (req, res) => {
          res.send('Hello from GitHub Actions! Server is running via playit.gg tunnel');
        });

        app.listen(port, '0.0.0.0', () => {
          console.log(`Node.js server running on port ${port}`);
        });
        EOL

    - name: Download and Install Playit
      run: |
        wget https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-linux-amd64
        chmod +x playit-linux-amd64
        
    - name: Start Node.js Server
      run: |
        node server.js &
        echo "Node.js server started on port 3000"
        sleep 5 # Give the server some time to start

    - name: Start Playit and Set Up TCP Tunnel
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PLAYIT_AUTH_KEY }}
      run: |
        ./playit-linux-amd64 setup-tcp-tunnel --secret ${{ secrets.PLAYIT_AUTH_KEY }} --local-port 3000 &
        sleep 10 # Wait for the tunnel setup
        # Start playit agent
        ./playit-linux-amd64 &
        
    - name: Display Information
      run: |
        echo "Node.js server is running on port 3000"
        echo "Check your playit.gg dashboard for the public URL"
          
    # Keep the workflow running
    - name: Keep the GitHub Action Runner Alive
      run: |
        for i in {1..360}; do
          echo "Keeping runner alive - $i/360"
          sleep 60
        done
