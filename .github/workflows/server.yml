name: Node.js Server with Playit.gg

on: [workflow_dispatch]

jobs:
  setup-node-server:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install project dependencies
      run: |
        npm install
        # If you don't have a package.json already, you could create a basic one:
        # if (-not (Test-Path "package.json")) {
        #   '{ "name": "simple-node-server", "version": "1.0.0", "scripts": { "start": "node server.js" } }' | Out-File -FilePath "package.json"
        # }

    - name: Create simple server file if not exists
      run: |
        if (-not (Test-Path "server.js")) {
          @'
const http = require('http');

const server = http.createServer((req, res) => {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/html');
  res.end(`
    <!DOCTYPE html>
    <html>
      <head>
        <title>Node.js Server on GitHub Actions</title>
        <style>
          body {
            font-family: Arial, sans-serif;
            margin: 40px;
            line-height: 1.6;
          }
          h1 {
            color: #333;
          }
          .container {
            max-width: 800px;
            margin: 0 auto;
            background: #f4f4f4;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1>Node.js Server Running Successfully!</h1>
          <p>This server is running on GitHub Actions and tunneled through playit.gg</p>
          <p>Current server time: ${new Date().toISOString()}</p>
          <p>Request URL: ${req.url}</p>
        </div>
      </body>
    </html>
  `);
});

const PORT = process.env.PORT || 3000;

server.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
'@ | Out-File -FilePath "server.js"
        }

    - name: Download and Install Playit
      run: |
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Start-Sleep -Seconds 5  # Give some time for the download to complete

    - name: Start Node.js Server
      run: |
        Start-Process -FilePath "node" -ArgumentList "server.js" -NoNewWindow
        # Wait for the server to start
        Start-Sleep -Seconds 5

    - name: Start Playit and Set Up Port Tunnel
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PLAYIT_AUTH_KEY }}
      run: |
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow
        Start-Sleep -Seconds 10
        
        # Add TCP tunnel for Node.js server
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "add-tunnel --name node-server --local-port 3000" -NoNewWindow
        
        # Print information for the user
        Write-Host "Node.js server started on port 3000 and tunneled via playit.gg"
        Write-Host "Check the playit.gg dashboard for your public URL"
        
    # Keep the workflow running
    - name: Keep the GitHub Action Runner Alive
      run: |
        Write-Host "Node.js server is running and accessible via playit.gg"
        Write-Host "The workflow will stay alive for approximately 3 hours"
        Start-Sleep -Seconds 10800  # Run for 3 hours
