name: Server

on:
  workflow_dispatch:

jobs:
  b:
    runs-on: windows-latest

    steps:
      - name: Clone repo and install dependencies
        env:
          k: ${{ secrets.PAT }}
        run: |
          git clone https://$env:k@github.com/mohdshibili/AccaMate.git z
          cd z\server
          npm i

      - name: Download Playit Agent
        run: |
          iwr -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\p.exe"
          sleep 5

      - name: Download Caddy Executable
        run: |
          iwr -Uri "https://caddyserver.com/api/download?os=windows&arch=amd64" -OutFile "$env:USERPROFILE\caddy.exe"

      - name: Write Caddyfile for custom domain
        run: |
          echo "{" > "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "  http_port 8080" >> "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "  https_port 8443" >> "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "}" >> "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "" >> "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "test.dearfin.com {" >> "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "  reverse_proxy localhost:3000" >> "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "  tls internal" >> "$env:GITHUB_WORKSPACE\Caddyfile"
          echo "}" >> "$env:GITHUB_WORKSPACE\Caddyfile"

      - name: Start Node, Playit, and Caddy with visible logs
        env:
          t: ${{ secrets.DEAR_FIN }}
        run: |
          # Start processes in background but redirect output to files
          Start-Process -FilePath "npm" -ArgumentList "run", "start" -WorkingDirectory "$env:GITHUB_WORKSPACE\z\server" -RedirectStandardOutput "$env:GITHUB_WORKSPACE\node.log" -RedirectStandardError "$env:GITHUB_WORKSPACE\node-error.log" -NoNewWindow
          Start-Process -FilePath "$env:USERPROFILE\p.exe" -ArgumentList "--secret", "$env:t" -RedirectStandardOutput "$env:GITHUB_WORKSPACE\playit.log" -RedirectStandardError "$env:GITHUB_WORKSPACE\playit-error.log" -NoNewWindow
          Start-Process -FilePath "$env:USERPROFILE\caddy.exe" -ArgumentList "run", "--config", "$env:GITHUB_WORKSPACE\Caddyfile", "--adapter", "caddyfile" -RedirectStandardOutput "$env:GITHUB_WORKSPACE\caddy.log" -RedirectStandardError "$env:GITHUB_WORKSPACE\caddy-error.log" -NoNewWindow
          
          # Wait a moment for processes to start
          Start-Sleep -Seconds 10
          
          # Create a loop to continuously display logs
          while ($true) {
            Write-Host "===== NODE.JS SERVER LOGS ====="
            if (Test-Path "$env:GITHUB_WORKSPACE\node.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\node.log" -Tail 20
            }
            if (Test-Path "$env:GITHUB_WORKSPACE\node-error.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\node-error.log" -Tail 20
            }
            
            Write-Host "===== PLAYIT AGENT LOGS ====="
            if (Test-Path "$env:GITHUB_WORKSPACE\playit.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\playit.log" -Tail 20
            }
            if (Test-Path "$env:GITHUB_WORKSPACE\playit-error.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\playit-error.log" -Tail 20
            }
            
            Write-Host "===== CADDY SERVER LOGS ====="
            if (Test-Path "$env:GITHUB_WORKSPACE\caddy.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\caddy.log" -Tail 20
            }
            if (Test-Path "$env:GITHUB_WORKSPACE\caddy-error.log") {
              Get-Content -Path "$env:GITHUB_WORKSPACE\caddy-error.log" -Tail 20
            }
            
            # Keep the workflow running for a specified amount of time
            # GitHub Actions will eventually time out on its own
            # You can adjust this timeout as needed
            Start-Sleep -Seconds 30
          }
        shell: pwsh
